program: run.py
method: grid  # Use grid search to test all combinations
parameters:
  add_mono_file:
    values: ["mono_challenge_buttons.txt"]  # Replace with your specific file names
  handpicked_decomp:
    values: ["None"]  # Replace with your specific file names
  num_candidates:
    values: [10]  # Add more values if needed
  seed:
    values: [1, 2, 3, 4, 5]
  env:
    values: ["buttons"]
  decomposition_file:
    values: ["mono_challenge_buttons.txt"]
  assignment_methods:
    values: ["UCB"]
  ucb_c:
    values: [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75]
  num_iterations:
    values: [1]
  wandb:
    values: [True]
  sweep:
    values: [True]
  experiment_name:
    values: ["buttons_challenge"]
  is_monolithic:
    values: [False]
  render:
    values: [False]
  video:
    values: [False]
  timesteps:
    values: [3000000]
command:
  - ${env}
  - ${interpreter}
  - ${program}
  - ${args}

# --env buttons
# python run.py --assignment_methods UCB --num_iterations 1 --wandb f 
# --decomposition_file mono_challenge_buttons.txt --experiment_name buttons_challenge 
# --is_monolithic f --env buttons --render f --video f --add_mono_file mono_challenge_buttons.txt 
# # --num_candidates 10  --timesteps 3000000 --handpicked_decomp aux_buttons.txt
# Include other necessary arguments with default values or placeholders